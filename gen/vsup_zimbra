#!/usr/bin/perl
use feature "switch";
use strict;
use warnings;
use perunServicesInit;
use perunServicesUtils;

local $::SERVICE_NAME = "vsup_zimbra";
local $::PROTOCOL_VERSION = "3.0.0";
my $SCRIPT_VERSION = "3.0.0";

perunServicesInit::init;
my $DIRECTORY = perunServicesInit::getDirectory;
my $fileName = "$DIRECTORY/$::SERVICE_NAME".".csv";
my $data = perunServicesInit::getHierarchicalData;

# Constants
our $A_LOGIN; *A_LOGIN = \'urn:perun:user_facility:attribute-def:virt:login';
our $A_UCO; *A_UCO = \'urn:perun:user:attribute-def:def:ucoVsup';
our $A_FIRST_NAME;  *A_FIRST_NAME = \'urn:perun:user:attribute-def:core:firstName';
our $A_LAST_NAME;  *A_LAST_NAME = \'urn:perun:user:attribute-def:core:lastName';
our $A_ARTISTIC_FIRST_NAME; *A_ARTISTIC_FIRST_NAME = \'urn:perun:user:attribute-def:def:artisticFirstName';
our $A_ARTISTIC_LAST_NAME; *A_ARTISTIC_LAST_NAME = \'urn:perun:user:attribute-def:def:artisticLastName';

our $A_EMAIL_VSUP;  *A_EMAIL_VSUP = \'urn:perun:user:attribute-def:def:vsupMail';
our $A_R_RELATION_TYPE; *A_R_RELATION_TYPE = \'urn:perun:resource:attribute-def:def:relationType';

# GATHER USERS
my $users;  # $users->{$uco}->{ATTR} = $attrValue;

#
# AGGREGATE DATA
#
# FOR EACH USER
foreach my $rData ($data->getChildElements) {

	my %resourceAttributes = attributesToHash $rData->getAttributes;
	my $relationType = $resourceAttributes{$A_R_RELATION_TYPE};

	# Must be in a relation
	unless ($relationType) {
		next;
	}

	my @membersData = $rData->getChildElements;

	foreach my $member (@membersData) {

		my %uAttributes = attributesToHash $member->getAttributes;

		my $uco = $uAttributes{$A_UCO};
		$users->{$uco}->{$A_LOGIN} = $uAttributes{$A_LOGIN};
		$users->{$uco}->{'EMAIL'} = ($uAttributes{$A_EMAIL_VSUP} || $uAttributes{$A_LOGIN} . '@vsup.cz');

		$users->{$uco}->{$A_FIRST_NAME} = ($uAttributes{$A_ARTISTIC_FIRST_NAME} || ($uAttributes{$A_FIRST_NAME} || ''));
		$users->{$uco}->{$A_LAST_NAME} = ($uAttributes{$A_ARTISTIC_LAST_NAME} || ($uAttributes{$A_LAST_NAME} || ''));

		# determine user account type (preferred ZAM over STU)
		if ($relationType eq "ZAM") {
			$users->{$uco}->{'TYPE'} = $relationType;
		} elsif ($relationType eq "STU") {
			unless ($users->{$uco}->{'TYPE'}) {
				$users->{$uco}->{'TYPE'} = $relationType;
			}
		}

	}
}

#
# PRINT user data
#
open FILE,">$fileName" or die "Cannot open $fileName: $! \n";
binmode FILE, ":utf8";

# print personal info
my @keys = sort keys %{$users};
for my $uco (@keys) {

	# print attributes, which are never empty
	print FILE $uco . "\t" . $users->{$uco}->{$A_LOGIN} . "\t" . $users->{$uco}->{'TYPE'} . "\t" .
		$users->{$uco}->{'EMAIL'} . "\t" . $users->{$uco}->{$A_FIRST_NAME} . "\t" . $users->{$uco}->{$A_LAST_NAME} . "\n";

}

close(FILE);

perunServicesInit::finalize;
