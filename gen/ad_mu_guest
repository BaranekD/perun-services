#!/usr/bin/perl
use feature "switch";
use strict;
use warnings;
use perunServicesInit;
use perunServicesUtils;
use Data::Dumper;

local $::SERVICE_NAME = "ad_mu_guest";
local $::PROTOCOL_VERSION = "3.0.0";
my $SCRIPT_VERSION = "3.0.0";

perunServicesInit::init;
my $DIRECTORY = perunServicesInit::getDirectory;
my $fileName = "$DIRECTORY/$::SERVICE_NAME".".ldif";
my $baseDnFileName = "$DIRECTORY/baseDN";

my $data = perunServicesInit::getFlatData;

#Constants
our $A_F_BASE_DN;  *A_F_BASE_DN = \'urn:perun:facility:attribute-def:def:adBaseDN';

# User attributes
our $A_FIRST_NAME;  *A_FIRST_NAME = \'urn:perun:user:attribute-def:core:firstName';
our $A_LAST_NAME;  *A_LAST_NAME = \'urn:perun:user:attribute-def:core:lastName';
our $A_DISPLAY_NAME;  *A_DISPLAY_NAME = \'urn:perun:user:attribute-def:core:displayName';
our $A_MAIL;  *A_MAIL = \'urn:perun:user:attribute-def:def:preferredMail';
our $A_LOGIN; *A_LOGIN = \'urn:perun:user:attribute-def:def:login-namespace:mu';

# GATHER USERS
my $users;  # $users->{$login}->{ATTR} = $attrValue;

# CHECK ON FACILITY ATTRIBUTES
my %facilityAttributes = attributesToHash $data->getAttributes;
if (!defined($facilityAttributes{$A_F_BASE_DN})) {
	exit 1;
}

#
# PRINT BASE_DN FILEs
#
my $base_guests = "OU=Guests,".$facilityAttributes{$A_F_BASE_DN};
my $base_service = "OU=Services,".$facilityAttributes{$A_F_BASE_DN};

open FILE,">$baseDnFileName" or die "Cannot open $baseDnFileName: $! \n";
print FILE $facilityAttributes{$A_F_BASE_DN};
close(FILE);

#
# AGGREGATE DATA
#

# FOR EACH USER
foreach my $user (($data->getChildElements)[1]->getChildElements) {

	my %uAttributes = attributesToHash $user->getAttributes;

	my $login = $uAttributes{$A_LOGIN};

	if ( $login =~ /^s-/ ) {
		# is service user
		$users->{$login}->{"DN"} = "CN=" . $uAttributes{$A_LOGIN} . "," . $base_service;
	} elsif ($login =~ /^e[0-9]{1,6}$/) {
		# is guest user
		$users->{$login}->{"DN"} = "CN=" . $uAttributes{$A_LOGIN} . "," . $base_guests;
	} else {
		# skip standard MU users !!
		next;
	}

	# store standard attrs
	$users->{$login}->{$A_FIRST_NAME} = $uAttributes{$A_FIRST_NAME};
    $users->{$login}->{$A_LAST_NAME} = $uAttributes{$A_LAST_NAME};
    $users->{$login}->{$A_DISPLAY_NAME} = $uAttributes{$A_DISPLAY_NAME};
    $users->{$login}->{$A_MAIL} = $uAttributes{$A_MAIL};

}

#
# PRINT user data LDIF
#
open FILE,">$fileName" or die "Cannot open $fileName: $! \n";

# FOR EACH USER ON FACILITY
my @logins = sort keys %{$users};
for my $login (@logins) {
	
	# print attributes, which are never empty
	print FILE "dn: " . $users->{$login}->{"DN"} . "\n";

	# skip attributes which are empty and LDAP can't handle it (FIRST_NAME, EMAIL)
	my $sn = $users->{$login}->{$A_LAST_NAME};
	my $givenName = $users->{$login}->{$A_FIRST_NAME};
	my $displayName = $users->{$login}->{$A_DISPLAY_NAME};
	my $mail = $users->{$login}->{$A_MAIL};

	if (defined $displayName and length $displayName) {
		print FILE "displayName: " . $displayName . "\n";
	}
	if (defined $sn and length $sn) {
		print FILE "sn: " . $sn . "\n";
	}
	if (defined $givenName and length $givenName) {
		print FILE "givenName: " . $givenName . "\n";
	}
	if (defined $mail and length $mail) {
		print FILE "mail: " . $mail . "\n";
	}

	# print classes
	print FILE "objectclass: top\n";
	print FILE "objectclass: person\n";
	print FILE "objectclass: user\n";
	print FILE "objectclass: organizationalPerson\n";

	# There MUST be an empty line after each entry, so entry sorting and diff works on slave part
	print FILE "\n";

}

close(FILE);

perunServicesInit::finalize;
