#!/usr/bin/perl
use strict;
use warnings;
use perunServicesInit;
use perunServicesUtils;
use File::Basename;

our $SERVICE_NAME = basename($0);
our $PROTOCOL_VERSION = "3.1.0";
my $SCRIPT_VERSION = "3.0.1";

perunServicesInit::init;
my $DIRECTORY = perunServicesInit::getDirectory;
my $data = perunServicesInit::getHierarchicalData;

my $sshkeysDirectory = "$DIRECTORY/sshkeys";
mkdir $sshkeysDirectory or die "Can't mkdir $sshkeysDirectory: $!";

#Constants
our $A_SSHKEYS;                      *A_SSHKEYS =                     \'urn:perun:user:attribute-def:def:sshPublicKey';
our $A_USER_LOGIN;                   *A_USER_LOGIN =                  \'urn:perun:user_facility:attribute-def:virt:login';

my $service_file_name = "$DIRECTORY/$::SERVICE_NAME";

my %sshKeys;

my %facilityAttributes = attributesToHash $data->getAttributes;
#####################################

my @resourcesData = $data->getChildElements;
foreach my $rData (@resourcesData) {
	my %values;
	my @membersData = $rData->getChildElements;
	foreach my $mData (@membersData) {
		my %memberAttributes = attributesToHash $mData->getAttributes;

		$sshKeys{$memberAttributes{$A_USER_LOGIN}} = $memberAttributes{$A_SSHKEYS};
	}
}

####### output ######################
for my $login (keys %sshKeys) {
	open SERVICE_FILE,">$sshkeysDirectory/$login" or die "Cannot open $sshkeysDirectory/$login: $! \n";
	print SERVICE_FILE join "\n", @{$sshKeys{$login}}, "\n" if defined $sshKeys{$login};
	close SERVICE_FILE;
}
#####################################################
perunServicesInit::finalize;
