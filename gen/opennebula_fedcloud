#!/usr/bin/perl

use strict;
use warnings;
use perunServicesInit;
use perunServicesUtils;
use Text::Unidecode;

local $::SERVICE_NAME = "opennebula_fedcloud";
local $::PROTOCOL_VERSION = "3.0.0";
my $SCRIPT_VERSION = "3.0.0";

perunServicesInit::init;
my $DIRECTORY = perunServicesInit::getDirectory;
my $data = perunServicesInit::getHierarchicalData;

#Constants
our $A_R_VO_SHORT_NAME;   *A_R_VO_SHORT_NAME =   \'urn:perun:resource:attribute-def:virt:voShortName';
our $A_MEMBER_MAIL;       *A_MEMBER_MAIL =       \'urn:perun:member:attribute-def:virt:mail';
our $A_USER_CERT_DNS;     *A_USER_CERT_DNS =     \'urn:perun:user:attribute-def:def:userCertDNs';
our $A_USER_FACILITY_UID; *A_USER_FACILITY_UID = \'urn:perun:user_facility:attribute-def:virt:UID';

my $fileName = "$DIRECTORY/$::SERVICE_NAME";
open FILE,">$fileName" or die "Cannot open $fileName: $! \n";

my @membersAttributes;
my @resourcesData = $data->getChildElements;
for my $rData (@resourcesData) {
	my %resourcesAttributes = attributesToHash $rData->getAttributes;
	for my $mData ($rData->getChildElements) {
		my %mAttrs = attributesToHash $mData->getAttributes;
		$mAttrs{$A_R_VO_SHORT_NAME} = $resourcesAttributes{$A_R_VO_SHORT_NAME};
		push @membersAttributes, \%mAttrs;
	}
}

# DN uzivatele:DN certifikacni autority:jmeno uzivatele:email uzivatele 
foreach my $memberAttributes (@membersAttributes) {
	foreach my $caDN (keys %{$memberAttributes->{$A_USER_CERT_DNS}}) {
		chomp $memberAttributes->{$A_USER_CERT_DNS}{$caDN};
		my $uid = crypt $memberAttributes->{$A_USER_CERT_DNS}{$caDN}," ";
		$uid =~ s/ //g;
		$uid = $memberAttributes->{$A_USER_FACILITY_UID} . '-' . $uid;

		print FILE $uid, ":", $memberAttributes->{$A_R_VO_SHORT_NAME} . ":" . $caDN . ":" . $memberAttributes->{$A_USER_CERT_DNS}{$caDN} . ":";
		print FILE $memberAttributes->{$A_MEMBER_MAIL}."\n";
	}
}

close (FILE);
perunServicesInit::finalize;
