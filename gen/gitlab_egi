#!/usr/bin/perl
use strict;
use warnings;
use perunServicesInit;
use perunServicesUtils;
use Text::Unidecode;
use File::Basename;

our $SERVICE_NAME = basename($0);
our $PROTOCOL_VERSION = "3.1.0";
my $SCRIPT_VERSION = "3.0.0";

perunServicesInit::init;
my $DIRECTORY = perunServicesInit::getDirectory;
my $data = perunServicesInit::getHierarchicalData;

#Constants
our $A_SSHKEYS;                      *A_SSHKEYS =                     \'urn:perun:user:attribute-def:def:sshPublicKey';
our $A_DISPLAYNAME;                  *A_DISPLAYNAME =                 \'urn:perun:user:attribute-def:core:displayName';
our $A_EPPNS;                        *A_EPPNS =                       \'urn:perun:user:attribute-def:virt:eduPersonPrincipalNames';
our $A_EMAIL;                        *A_EMAIL =                       \'urn:perun:user:attribute-def:def:preferredMail';

my $service_file_name = "$DIRECTORY/$::SERVICE_NAME";

my %sshKeys;
my %eppns;
my $email;
my $displayName;

my %facilityAttributes = attributesToHash $data->getAttributes;
#####################################

open SERVICE_FILE,">$service_file_name" or die "Cannot open $service_file_name: $! \n";

my @resourcesData = $data->getChildElements;
foreach my $rData (@resourcesData) {
	my %values;
	my @membersData = $rData->getChildElements;
	foreach my $mData (@membersData) {
		my %memberAttributes = attributesToHash $mData->getAttributes;

		# !!!!
		# Filter EPPNs only for those from EGI SSO = scope is @egi.eu
		my @eppns_egi = grep(/\@egi\.eu$/, @{$memberAttributes{$A_EPPNS}});

		####### output ######################
		print SERVICE_FILE '"' . unidecode($memberAttributes{$A_DISPLAYNAME}) . '",';
		print SERVICE_FILE '"' . $memberAttributes{$A_EMAIL} . '",'; 
		print SERVICE_FILE '"' . join(",", @eppns_egi) . '",';
		print SERVICE_FILE '"' . join(",", @{$memberAttributes{$A_SSHKEYS}}) . '"' if defined $memberAttributes{$A_SSHKEYS};
	}
}

close SERVICE_FILE;
#####################################################
perunServicesInit::finalize;
